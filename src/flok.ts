import { FlockDirectory, readFlockDirectory } from './flock-directory.ts';
import { build } from './builder.ts';
import { ModuleTreeConverter } from './module-tree.ts';
import { delay } from "https://deno.land/std@0.185.0/async/delay.ts";
import { isNerdFont } from './nerd.ts';

if (!isNerdFont) {
	console.log("For best look, install a nerd font and set env NERD_FONT to YES");
	await delay(3000);
}

class WebBuilderBuilder {
	converter: ModuleTreeConverter = new ModuleTreeConverter();

	compile(dir: FlockDirectory) {
		let output = ``;

		output += `<!--This file was automatically generated by {flock}-->\n`;
		output += `<!--Although it looks tempting to edit this, don't, for your own sake-->\n`;

		output += `<html>`;

		output += `<head>`;

		output += `<title>`;
		output += `Swarm Web Builder`;
		output += `</title>`;

		output += `<style>`;
		output += `body {
			color: #eeeeee;
			background-color: #111111;
			font-family: sans-serif;
			padding: 50px;
		}
		textarea, p {
			width: 100%;
			padding: 20px;
			background-color: rgba(255,255,255,0.1);
			color: white;
			border: 2px solid rgba(255,255,255,0.1);
			border-radius: 5px;
			box-sizing: border-box;
			resize: vertical;
			overflow: hidden;
		}`;
		output += `</style>`;

		output += `</head>`;

		output += `<body>`;

		output += '<script type="module">';
		output += `
		import { minify } from 'https://esm.sh/terser';
		
		${build.toString()};

		window.onload = () => {
			setInterval(async ()=>{
				const dependencies = document.querySelector("#input").value.split("\\n");
				const userSource = document.querySelector("#src").value;

				let output = await minify(build(${JSON.stringify(
					this.converter.convertDirectory(dir),
				)},dependencies,userSource),{ mangle: {
					properties: true,
				}, compress: {booleans_as_integers:true,expression:true,passes:4}});

				output = output.code || output.error;
			
				if (!userSource.includes("await swarm.init")) {
					output = "Please await swarm.init() somewhere in your code.";
				}

				const outputPanel = document.querySelector("#output");

				if (outputPanel.value != output) {
					console.log(output);
					outputPanel.value = output;
				}

				document.querySelector("#quicktest").href = "javascript:" + output;
			});
		}`;
		output += '</script>';

		output += `<h1>Swarm<br>Web<br>Builder</h1>`;
		output += `<h2>Dependencies</h2>`;
		output += `<textarea  id="input">\nswarm\nswarm.ui\n</textarea>`;
		output += `<h2>Your code (make sure to await swarm.init())</h2>`;
		output += `<textarea  id="src">
try { 
	await swarm.init(); 
} catch {} 
document.body.appendChild(
	swarm.ui.getDomNode([
		swarm.ui.button().content("boykisser"),
		swarm.ui.button().content("boykisser"),
		swarm.ui.button().content("boykisser")
	]));
</textarea>`;
		output += `<h2>Generated output</h2>`;
		output += `<textarea  id="output"></textarea>`;
		output += `<a id="quicktest">Quick Test</a>`;
		output += `</body>`;

		output += `</html>`;

		return output;
	}
}

const swarmDir = await readFlockDirectory('./swarm');
//console.log(compile(swarmDir));
const webBuilder = new WebBuilderBuilder();
await Deno.writeTextFile('./web-builder.html', webBuilder.compile(swarmDir));
